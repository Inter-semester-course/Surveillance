<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdcAAAHXAYySCGgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEGklEQVR4Xu3bTehUVRjH8X+irQRNIUxEQapFFu5CQkPNt5QoFDUS9yWERK40VAQRxFW+K0SLQFIj
        aRGmUCBpiyBILVMoCOnFqBaagprp9ycVw8Pzn7nn3HvOuQPzg89mmHueMw/zcu+Zc4ci8yDmYzfO4DJu
        4m6gG/gVX+AgVuNhtDZ64a/jCrwX1ITb+BjP4wG0JtNxCd6kU/kSM1A8L+EavEmmdgc7MApFos+63pbe
        5HL6HOOQNY/jT3gTkqt4H2/gFSwP9Bq8cYfzDR5BtpyENxG9I7ZhDOrGG7+bC8jShAXwJvAXFqKpeDV2
        4QfzWKcsTTgBW/gfLEOTsTVEH4/RONbxmJW0CWNxC7boB2g6toaoAcoI7If3HEnWhJXwCj6NpuPV+a8B
        ik6G9sF7niRpwluwhX5CijMzW0c6G6CobtZ3wh7YIp8iRWwdsQ1Q1ARde3jPl4uYiEai33Zb4ChSxNYR
        rwFKlXfCBNTOYdjB9ViK2DoyXAOULE1ocwOUXh+Hs3gI0Wl7AxQ14QC840WX1HpOVPqhAUqvJryJqORs
        gM4ubS2dh1SNmvAO7Bii0/bJCE7OBvwGW2srQqK1guEu3N5FcHI24BRsLV1mh5516pvfu3TXKf0UBCVn
        A9bB1hJdcmsRRHWr+h7eWJsRFA1mB9FjKaI1hd9h6zVJ5wZBydkAZQW8L8MmTULl5G6AshZ/w9ZtStWf
        1vsp0QBlDr6Grd0EXeFWTqkGKFoEeQaboN931Q3lfafsReVoEDuAHuuX6DTYzv89VE6/N6D2/AcNQK0B
        CmfQANSa/6ABqDVA4RRtwBNYCp15NUlj6s/aKinWgJ2wxzVJ1wtb0CtFGvAk7DEpqAmPoVuKNGAx7DGp
        6J/rbinSAO3uyrGN5g/0WvIu0gBlEc4hxWWtxvwKM9ErxRrQlgwagFrzHzQAtQYonEEDUGv+sQOMh9bg
        D0HPD6FjtAzWxGZIjRcz//8TM4A2Un8Le1yo86i7LbZIA7Sia4+J9SzqpEgDZsMeE2sW6qRIA/S21V5e
        e1wonUkW/wjEbpLSF5i+yGK/BDei1taWf6O52vnrNVWOt//mM/RLvL/ctVZRORtgB/gZ0XtuMkb/LP0C
        O//1qBz9W2sHkBRbZZuObrHx5q5ltcrRf/beXWAfou35CHbe2iWiDeBB8bbLS1AnM+dleHM+juDoXiFv
        sOvQLW1tyxLoPkRvznMRlU/gDajVme0IflsliH42dVeZ7i7z5qp/iqPzKLQG5w0sWgM8Am1IXIXOdfyU
        VEs19XvfbR1S+wSmolZ0Xh5zW2xp2mUW/da3eRGlbpyMoX2GL6DRPIXv4BVsE12ST0OS6CJlDXTHt1e8
        JJ39vYqRSB41Yh50fn0aPyLn94RqqaZqv43nEPHCh4buAdtfeF6O5gGyAAAAAElFTkSuQmCC
</value>
  </data>
</root>